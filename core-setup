#! /bin/bash

cd $HOME
sudo apt-get update
sudo apt update
sudo apt upgrade -y


# Setup locale as UTF-8
locale 
sudo apt install locales
sudo locale-gen en_US en_US.UTF-8
sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
export LANG=en_US.UTF-8


# Set Default AIMS System Settings
#background="/background.jpg"
#gsettings set org.gnome.desktop.background picture-uri file://$PWD$background
#
#newicon="/user_avatar.png"
#icon=`echo $(ls /var/lib/AccountsService/icons)`
#iconpath=$(realpath /var/lib/AccountsService/icons/$icon)
#sudo cp $PWD$newicon $iconpath


# ##############################################################################
# Uninstall Non-Essential Pre-Packaged Programs
sudo apt-get -y purge \
  gnome-games \
  aisleriot \
  gnome-mahjongg \
  gnome-mines \
  gnome-sudoku
sudo apt-get -y purge \
  simple-scan \
  gnome-todo

#sudo apt purge rhythmbox rhythmbox-data rhythmbox-plugin-alternative-toolbar rhythmbox-plugins
#sudo apt purge remmina remmina-common remmina-plugin-rdp remmina-plugin-secret remmina-plugin-vnc

sudo apt-get -y purge \
  thunderbird \
  thunderbird-locale-en \
  thunderbird-gnome-support \
  thunderbird-locale-en-us

sudo apt -y autoremove


# ##############################################################################
# Install System Tools & Libraries 
sudo apt install -y \
  curl \
  gnupg2 \
  lsb-release \
  git \
  meld \
  build-essential \
  libfontconfig1 \
  mesa-common-dev \
  libglu1-mesa-dev


# ##############################################################################
# Install Support Library for Pulse Secure VPN (used by Ohio State)
 sudo apt install -y network-manager-openconnect-gnome


# ##############################################################################
# Useful tools
sudo apt-get install tree


# ##############################################################################
# Install Python tools commonly used by AIMS
# Todo: Determine where to install these packages.
#sudo apt install -y python3-pip
#python3 -m pip install -U \
#  tqdm \
#  numpy \
#  opencv-python


# ##############################################################################
# ROS1 packages source
sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -


# ##############################################################################
# ROS2 packages source
sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key  -o /usr/share/keyrings/ros-archive-keyring.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null


sudo apt-get update
sudo apt update


# ##############################################################################
# ROS1 install
# Note: the "industrial_core" package has not released a debian package, but it may be built manually.
sudo apt install -y ros-noetic-desktop
sudo apt install -y ros-noetic-catkin python3-catkin-tools python3-osrf-pycommon
sudo apt install -y python3-wstool

sudo apt install -y ros-noetic-moveit
sudo apt install -y ros-noetic-moveit-visual-tools
sudo apt install -y ros-noetic-perception
sudo apt install -y ros-noetic-warehouse-ros ros-noetic-warehouse-ros-mongo
sudo apt install -y pcl-tools
sudo apt install -y ros-noetic-trac-ik-kinematics-plugin

sudo apt install -y ros-noetic-image-publisher


# ##############################################################################
# ROS2 install
sudo apt install -y ros-foxy-desktop
sudo apt install -y ros-foxy-moveit
sudo apt install -y ros-foxy-image-publisher


# ##############################################################################
# Install ROS Industrial Specific Packages
# w/ PID Controllers for Robot Simulation

sudo apt-get install -y \
  ros-noetic-joint-state-publisher \
  ros-noetic-joint-state-publisher-gui \
  ros-noetic-position-controllers \
  ros-noetic-joint-state-controller
  
sudo apt-get install -y \
  ros-foxy-joint-state-publisher \
  ros-foxy-joint-state-publisher-gui \
  ros-foxy-joint-state-controller \
  ros-foxy-position-controllers
  
  
# ##############################################################################
# Install Gazebo for ROS w/ packages



# ##############################################################################
# Install Qt Creator with ROS plugin
# https://ros-qtc-plugin.readthedocs.io/en/latest/_source/Improve-ROS-Qt-Creator-Plugin-Developers-ONLY.html


# ##############################################################################
# Update ~/.bashrc file to source the ROS melodic environment
echo "# ROS ALIAS: " >> ~/.bashrc
echo "alias ros1-noetic='source /./opt/ros/noetic/setup.bash' " >> ~/.bashrc
echo "alias ros2-foxy='source /./opt/ros/foxy/setup.bash' " >> ~/.bashrc
#echo "export ROSCONSOLE_FORMAT='[${severity}] [${time}] [${node}] [${logger}]: ${message}' " >> ~/.bashrc
source ~/.bashrc


# ##############################################################################
# First Run of ROS Setup Things
# Install rosdep
sudo apt install -y python3-rosdep
sudo rosdep init
rosdep update


# ##############################################################################
# Final Cleanup
sudo apt-get update
sudo apt update
sudo apt upgrade -y
sudo apt -y autoremove

